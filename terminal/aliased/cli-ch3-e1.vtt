WEBVTT

1
00:00:02.179 --> 00:00:06.180
<v ->Okay, so welcome back and this series of videos,</v>

2
00:00:06.180 --> 00:00:08.430
what we're gonna look at is some of the kind of

3
00:00:08.430 --> 00:00:13.215
more fundamental programmes inside of the command line.

4
00:00:13.215 --> 00:00:15.445
So, the very first thing we're gonna look at,

5
00:00:15.445 --> 00:00:17.913
is one of the kinda building blocks

6
00:00:17.913 --> 00:00:19.913
of the UNIX command line

7
00:00:21.261 --> 00:00:22.867
and when I say UNIX command line,

8
00:00:22.867 --> 00:00:27.290
the UNIX command line is the same as a Mac command line

9
00:00:27.290 --> 00:00:28.957
and Linux and so on.

10
00:00:30.114 --> 00:00:32.130
We're gonna be looking at pipes.

11
00:00:32.130 --> 00:00:36.454
Now, what pipes do are to connect two programmes together.

12
00:00:36.454 --> 00:00:39.482
So, it takes the output of one programme

13
00:00:39.482 --> 00:00:43.358
and feeds it as the input to the second programme

14
00:00:43.358 --> 00:00:45.506
and you can keep kinda joining up multiple programmes

15
00:00:45.506 --> 00:00:49.059
to manipulate the output until you get what you want.

16
00:00:49.059 --> 00:00:52.809
A few really simple examples of this would be

17
00:00:54.442 --> 00:00:57.141
you could be watching a log file,

18
00:00:57.141 --> 00:00:59.507
so you could just look at all the log file

19
00:00:59.507 --> 00:01:02.046
and print out to the screen every time a new line

20
00:01:02.046 --> 00:01:04.045
is inserted in the log.

21
00:01:04.045 --> 00:01:06.090
But instead of printing everything to the screen,

22
00:01:06.090 --> 00:01:09.672
you could pipe that output into another programme

23
00:01:09.672 --> 00:01:12.515
that just limits it down to

24
00:01:12.515 --> 00:01:15.188
certain key phrase that you're looking for.

25
00:01:15.188 --> 00:01:18.767
So, maybe you're looking for an IP address in the log,

26
00:01:18.767 --> 00:01:20.727
you would tail the log,

27
00:01:20.727 --> 00:01:23.977
which is the effect of watching the log

28
00:01:26.908 --> 00:01:28.288
and printing new lines to the screen

29
00:01:28.288 --> 00:01:30.012
as they're inserted to the log.

30
00:01:30.012 --> 00:01:33.675
You would pipe that to a programme called grep,

31
00:01:33.675 --> 00:01:35.655
which is the command we'll use and see later on

32
00:01:35.655 --> 00:01:37.988
for searching and that would

33
00:01:39.854 --> 00:01:42.104
basically philtre the output

34
00:01:43.299 --> 00:01:46.068
just to show you what you wanted really.

35
00:01:46.068 --> 00:01:48.161
So, this next series of videos,

36
00:01:48.161 --> 00:01:50.203
we're gonna start by looking at pipe

37
00:01:50.203 --> 00:01:51.777
to connect programmes together.

38
00:01:51.777 --> 00:01:53.557
We're also going to look at string manipulation,

39
00:01:53.557 --> 00:01:56.736
since all the programmes on the command line

40
00:01:56.736 --> 00:02:01.131
actually print strings, they print just text.

41
00:02:01.131 --> 00:02:03.257
We're gonna look at manipulating that text,

42
00:02:03.257 --> 00:02:05.153
so we can do things like, like I said, grep,

43
00:02:05.153 --> 00:02:06.435
which is a way of searching.

44
00:02:06.435 --> 00:02:09.586
We can do more complicated greps using regular expressions,

45
00:02:09.586 --> 00:02:12.792
if you're at all familiar with that.

46
00:02:12.792 --> 00:02:16.305
We can sort lines, we can count lines,

47
00:02:16.305 --> 00:02:18.641
we can look for unique lines,

48
00:02:18.641 --> 00:02:22.808
and a lot of useful kind of string manipulation tools.

49
00:02:23.777 --> 00:02:25.975
So, let's jump straight in

50
00:02:25.975 --> 00:02:28.148
and let's have a look at the pipes.

51
00:02:28.148 --> 00:02:30.193
So, you don't have to worry too much about the commands

52
00:02:30.193 --> 00:02:31.812
I'm gonna be using here,

53
00:02:31.812 --> 00:02:33.803
but what I want to show you is

54
00:02:33.803 --> 00:02:35.861
the effect of each one individually.

55
00:02:35.861 --> 00:02:39.812
So, I want to find, in my blog that I released earlier,

56
00:02:39.812 --> 00:02:41.752
I'm in my blog directory

57
00:02:41.752 --> 00:02:43.533
and I want to find all the markdown files I've written

58
00:02:43.533 --> 00:02:47.125
and I want to see how much content I've written over time.

59
00:02:47.125 --> 00:02:50.771
Now, to start of with, I need to find all the files

60
00:02:50.771 --> 00:02:53.643
or some way of finding all the markdown files

61
00:02:53.643 --> 00:02:56.975
and find is a command to do that.

62
00:02:56.975 --> 00:02:59.147
So type find, dot, and press enter,

63
00:02:59.147 --> 00:03:01.568
you'll now see every single file in this directory,

64
00:03:01.568 --> 00:03:05.924
including hidden files, stuff I don't want,

65
00:03:05.924 --> 00:03:09.344
server.js directories, a load of files

66
00:03:09.344 --> 00:03:10.369
I don't particularly want,

67
00:03:10.369 --> 00:03:13.893
but also you can see there are some markdown files here.

68
00:03:13.893 --> 00:03:17.022
So you can see talks.md, Twitter.md,

69
00:03:17.022 --> 00:03:19.248
if I scroll up even further,

70
00:03:19.248 --> 00:03:21.154
hopefully somewhere up here,

71
00:03:21.154 --> 00:03:23.527
you'll start seeing some more markdown

72
00:03:23.527 --> 00:03:27.188
and those are the actual blog posts.

73
00:03:27.188 --> 00:03:29.521
So, I could copy all of that

74
00:03:30.567 --> 00:03:33.078
and then open something like sublime

75
00:03:33.078 --> 00:03:36.687
and then just start kinda of weeding through

76
00:03:36.687 --> 00:03:38.309
to find all the markdown files.

77
00:03:38.309 --> 00:03:39.359
What I can do next,

78
00:03:39.359 --> 00:03:41.126
is I can take the output from find

79
00:03:41.126 --> 00:03:44.626
and pipe it using the pipe command to grep

80
00:03:47.420 --> 00:03:49.728
and grep will search for terms.

81
00:03:49.728 --> 00:03:51.908
So, I'm gonna search for the term .md,

82
00:03:51.908 --> 00:03:55.477
because the file names that came out,

83
00:03:55.477 --> 00:03:56.977
they end with .md.

84
00:03:58.013 --> 00:03:59.846
I can do pipe grep .md

85
00:04:02.745 --> 00:04:05.773
and now, instead of printing everything in the screen,

86
00:04:05.773 --> 00:04:09.940
it only prints the lines that have the string .md.

87
00:04:11.271 --> 00:04:13.693
Now, there is a case that could be a problem here.

88
00:04:13.693 --> 00:04:16.460
There could me .md in a middle of a sentence,

89
00:04:16.460 --> 00:04:17.967
but for the time being,

90
00:04:17.967 --> 00:04:21.867
I'm just gonna keep it simple and just look for .md.

91
00:04:21.867 --> 00:04:25.389
So now, I have all the markdown files, which is good

92
00:04:25.389 --> 00:04:27.903
and I can count those,

93
00:04:27.903 --> 00:04:29.903
so let's pipe that to wc.

94
00:04:29.903 --> 00:04:31.580
Wc is the word count programme

95
00:04:31.580 --> 00:04:35.487
and if a run that, I can see that there are,

96
00:04:35.487 --> 00:04:39.654
this is 141 words, this lines, this is characters.

97
00:04:40.962 --> 00:04:43.762
Sorry, lines, words, characters.

98
00:04:43.762 --> 00:04:46.929
I'm gonna do lines, words, characters.

99
00:04:49.635 --> 00:04:51.303
I'm more interested in words,

100
00:04:51.303 --> 00:04:54.654
but I haven't written 441 words,

101
00:04:54.654 --> 00:04:59.008
it's actually the output from this, is being counted,

102
00:04:59.008 --> 00:05:00.843
so it counts that there are actually,

103
00:05:00.843 --> 00:05:02.703
this is a word here.

104
00:05:02.703 --> 00:05:04.703
So, what I need to do is

105
00:05:05.716 --> 00:05:06.996
like take all of these files

106
00:05:06.996 --> 00:05:10.055
and individually get the contents,

107
00:05:10.055 --> 00:05:12.472
so the programme, cat, can take

108
00:05:15.205 --> 00:05:17.208
the contents and file name

109
00:05:17.208 --> 00:05:19.635
and print it to screen.

110
00:05:19.635 --> 00:05:21.807
But I need to find a way of getting all of those files

111
00:05:21.807 --> 00:05:23.556
to be echoed out.

112
00:05:23.556 --> 00:05:25.806
So, I should be able to do,

113
00:05:27.300 --> 00:05:29.041
well if I try and pipe it to cat,

114
00:05:29.041 --> 00:05:31.990
doesn't quite work because it's just piping

115
00:05:31.990 --> 00:05:35.993
the input which will need another programme,

116
00:05:35.993 --> 00:05:38.838
not gonna explain how it works right at this second,

117
00:05:38.838 --> 00:05:41.804
but just really kind of look at

118
00:05:41.804 --> 00:05:44.835
piping programmes to mark together.

119
00:05:44.835 --> 00:05:46.782
So, I'm gonna used xargs

120
00:05:46.782 --> 00:05:50.183
and that will count out every single file

121
00:05:50.183 --> 00:05:52.111
and from there, I can do wc,

122
00:05:52.111 --> 00:05:54.774
and it'll give me the total count.

123
00:05:54.774 --> 00:05:58.000
So, words I've written, something like almost

124
00:05:58.000 --> 00:06:00.417
a quarter of a million words,

125
00:06:01.272 --> 00:06:04.355
and I can use xargs on the wc as well

126
00:06:05.445 --> 00:06:07.353
and it will give me a count

127
00:06:07.353 --> 00:06:09.310
of individual files that I can see.

128
00:06:09.310 --> 00:06:12.212
I've got a draught here that has 1100 words,

129
00:06:12.212 --> 00:06:14.390
total number of words down here.

130
00:06:14.390 --> 00:06:17.461
But really, again, what I'm showing you is

131
00:06:17.461 --> 00:06:19.605
grepping, sorry not grepping,

132
00:06:19.605 --> 00:06:21.605
piping commands together

133
00:06:22.797 --> 00:06:25.154
and any programme that has output,

134
00:06:25.154 --> 00:06:28.424
you can pipe it into other programmes.

135
00:06:28.424 --> 00:06:32.338
Nearly every single programme will accept

136
00:06:32.338 --> 00:06:33.921
input via this pipe

137
00:06:35.835 --> 00:06:37.424
and the names for these things

138
00:06:37.424 --> 00:06:39.096
is so when I run a command,

139
00:06:39.096 --> 00:06:40.824
everything that's printed on screen

140
00:06:40.824 --> 00:06:44.375
is being printed in instead of out

141
00:06:44.375 --> 00:06:46.526
and when I'm reading it from a pipe,

142
00:06:46.526 --> 00:06:49.483
I'm reading from standard in.

143
00:06:49.483 --> 00:06:51.900
So, useful to remember these terms when

144
00:06:51.900 --> 00:06:54.129
you're kind of having a Google

145
00:06:54.129 --> 00:06:57.022
and seeing if a command can accept a standard in.

146
00:06:57.022 --> 00:07:00.605
But certainly all of the common commands in

147
00:07:03.762 --> 00:07:07.429
the command line, find, grep, ls, cat, echo,

148
00:07:09.444 --> 00:07:10.959
all of the kind of basic commands,

149
00:07:10.959 --> 00:07:12.655
things you didn't instal in the first place,

150
00:07:12.655 --> 00:07:14.655
will accept standard in.

151
00:07:16.058 --> 00:07:20.983
So, basically allow programmes to connect up using pipes.

152
00:07:20.983 --> 00:07:24.566
So, just to show you one other use of pipe,

153
00:07:25.928 --> 00:07:27.489
there's a programme called less,

154
00:07:27.489 --> 00:07:30.420
which allows me to page through content.

155
00:07:30.420 --> 00:07:32.596
So, instead of printing everything to screen,

156
00:07:32.596 --> 00:07:34.034
I can pipe to less

157
00:07:34.034 --> 00:07:36.131
and it'll give me one page at a time.

158
00:07:36.131 --> 00:07:38.026
So, you can see there's a cursor down in this corner,

159
00:07:38.026 --> 00:07:41.313
if I press space, it'll go down through

160
00:07:41.313 --> 00:07:43.217
an entire page of content.

161
00:07:43.217 --> 00:07:46.065
I can use a cursor key to go up and down

162
00:07:46.065 --> 00:07:48.909
and inside of less, I can search for things as well.

163
00:07:48.909 --> 00:07:51.230
So, I can do a search for .md,

164
00:07:51.230 --> 00:07:55.893
and it will show me markdown files that I'm looking for.

165
00:07:55.893 --> 00:07:58.262
So, being able to pipe commands together

166
00:07:58.262 --> 00:08:03.139
to make more use of them is really powerful and very useful.

167
00:08:03.139 --> 00:08:05.777
So, once we've looked at pipes,

168
00:08:05.777 --> 00:08:08.330
you'll start seeing them at

169
00:08:08.330 --> 00:08:11.630
or more, you possibly have already used them.

170
00:08:11.630 --> 00:08:13.109
It's likely you've copied and pasted

171
00:08:13.109 --> 00:08:15.763
something with a pipe already

172
00:08:15.763 --> 00:08:20.513
and next we're gonna look at string manipulation commands.

173
00:08:20.513 --> 00:08:22.407
So, there's gonna be a whole slew of them

174
00:08:22.407 --> 00:08:24.921
and that'll be in the next video.

